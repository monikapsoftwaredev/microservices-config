### ta konfiguracja jest na docker
####spring.datasource.url=jdbc:postgresql://orderdbnew:5432/orderdb

### ta konfiguracja jest na local
spring.datasource.url=jdbc:postgresql://localhost:5432/orderdb

### ta konfiguracja jest i na docker i na local
spring.datasource.username=postgres
spring.datasource.password=monika1234
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
server.port=8082
spring.application.name=order-service
spring.jpa.hibernate.ddl-auto=update

### ta konfiguracja jest i na docker i na local
management.endpoints.web.exposure.include=*
eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true

### ta konfiguracja jest na local
####eureka.client.serviceUrl.defaultZone = http://eurekaserver:8761/eureka/

### ta konfiguracja jest na local
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

### ta konfiguracja jest i na docker i na local
management.info.env.enabled=true
spring.profiles.active=default


####Configuration for Actuator
management.endpoints.web.exposure.include=*
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s


# Kafka Properties
####spring.kafka.bootstrap-servers= localhost:9092
#####spring.kafka.template.default-topic=notificationTopic
####spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
####spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
####spring.kafka.producer.properties.spring.json.type.mapping=event:com.monika.orderservice.event.OrderPlacedEvent

##### w tym pliku nie umieszczamy url do pliku konfiduracyjnego dla microservisu config server , te pliki musza byc w pliku application.properties ---->
####spring.config.import=optional:configserver:http://configserver:8888/     albo tego 
####spring.config.import=optional:configserver:http://localhost:8888/


