### ta konfiguracja jest na docker 
spring.datasource.url=jdbc:postgresql://inventorydbnew:5432/inventorydb

### ta konfiguracja jest na local
###spring.datasource.url=jdbc:postgresql://localhost:5432/inventorydb

### ta konfiguracja jest i na docker i na local
spring.datasource.username=postgres
spring.datasource.password=monika1234
spring.jpa.hibernate.ddl-auto=update
server.port=8083
spring.application.name=inventory-service
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


### ta konfiguracja jest i na docker i na local
management.endpoints.web.exposure.include=*
#logging.level.root=DEBUG ---- ta configuracja jest do debugowania na dokerze i localu
eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true

### ta konfiguracja jest na local
###eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

### ta konfiguracja jest na docker
eureka.client.serviceUrl.defaultZone = http://eurekaserver:8761/eureka/

### ta konfiguracja jest i na docker i na local
management.info.env.enabled=true
spring.profiles.active=default

##### w tym pliku nie umieszczamy url do pliku konfiduracyjnego dla microservisu config server , te pliki musza byc w pliku application.properties ---->
####spring.config.import=optional:configserver:http://configserver:8888/ albo tego 
####spring.config.import=optional:configserver:http://localhost:8888/
