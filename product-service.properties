### ta konfiguracja jest na docker
##spring.data.mongodb.uri=mongodb://productdbnew:27017/productdb

### ta konfiguracja jest na local
###spring.data.mongodb.uri=mongodb://localhost:27017/productdb

### ta konfiguracja jest i na local i na docker
##spring.data.mongodb.database=productdb
##spring.data.mongodb.port=27017
##spring.data.mongodb.host=product
#spring.data.mongodb.authentication-database=admin
##server.port=8081
##spring.application.name=product-service
spring.datasource.url=jdbc:postgresql://localhost:5432/productdb
spring.datasource.username=postgres
spring.datasource.password=postgrestest
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
server.port=8081
spring.application.name=product-service

### ta konfiguracja jest i na local i na docker
eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true

### ta konfiguracja jest na docker
##eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/

### ta konfiguracja jest na local
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

### ta konfiguracja jest i na local i na docker
management.info.env.enabled=true
spring.profiles.active=default

##### w tym pliku nie umieszczamy url do pliku konfiduracyjnego dla microservisu config server , te pliki musza byc w pliku application.properties ---->
####spring.config.import=optional:configserver:http://configserver:8888/ albo tego 
####spring.config.import=optional:configserver:http://localhost:8888/

